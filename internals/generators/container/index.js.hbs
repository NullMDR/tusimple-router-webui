/*
 *
 * {{properCase name }}
 *
 */

import React, { Component, PropTypes } from 'react';
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';
{{#if wantHeaders}}
import HelmetIntl from 'components/HelmetIntl';
{{/if}}

{{#if wantActionsAndReducer}}
import select{{properCase name}} from './selectors';
import reducer from './reducer';
{{/if}}
{{#if wantSagas}}
import sagas from './sagas';
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl';
import messages from './messages';
{{/if}}
{{#if wantCSS}}
import styles from './styles.css';
{{/if}}


class {{ properCase name }} extends Component {

  static toInject = {
{{#if wantActionsAndReducer}}
    reducer,
{{/if}}
{{#if wantSagas}}
    sagas,
{{/if}}
  };

  render() {
    return (
      {{#if wantCSS}}
      <div className={{curly true}}styles.{{ camelCase name }}{{curly}}>
      {{else}}
      <div>
      {{/if}}
      {{#if wantHeaders}}
        <HelmetIntl appTitle={messages.title} />
      {{/if}}
      {{#if wantMessages}}
        <h1>
          <FormattedMessage {...messages.header} />
        </h1>
      {{/if}}
      </div>
    );
  }
}


export default connect(
{{#if wantActionsAndReducer}}
    select{{properCase name}}(),
{{/if}}
  (dispatch) => bindActionCreators({
  }, dispatch)
)({{ properCase name }});
